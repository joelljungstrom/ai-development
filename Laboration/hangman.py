'''
Skapa en version av det klassiska spelet Hangman.
- Datorn väljer ett slumpmässigt ord från en fördefinierad lista av ord.
- Spelet visar hur många bokstäver ordet består av, men inte vilka bokstäver som är rätt.
- Spelaren ska gissa en bokstav i taget, och datorn ger feedback om bokstaven finns i ordet eller inte.
- Spelet fortsätter tills spelaren har gissat hela ordet eller har gjort tillräckligt många felaktiga gissningar.
'''

import requests
import re
import random

def generate_word(choice):
    if choice == "1":
        random_word_response = ["apple", "banana", "cherry", "date", "elderberry", "fig", "grape", "melon", "kiwi", "lemon", "mango", "nectarine", "orange", "papaya", "quince", "raspberry", "strawberry", "tangerine", "watermelon"]
        random_word = random.choice(random_word_response)
    elif choice == "2":
        random_word_response = ["saab", "toyota", "ford", "honda", "chevrolet", "bmw", "mercedes", "audi", "volkswagen", "nissan", "kia", "hyundai", "porsche", "mazda", "subaru", "jaguar", "land rover", "fiat", "lexus", "volvo"]
        random_word = random.choice(random_word_response)
    elif choice == "3":
        random_word_response = ["sweden", "norway", "finland", "denmark", "iceland", "germany", "france", "italy", "spain", "portugal", "canada", "thailand", "brazil", "argentina", "australia", "india", "china", "japan", "greece", "mexico"]
        random_word = random.choice(random_word_response)
    elif choice == "4":
        random_word_response = ["gin", "vodka", "beer", "wine", "amarula", "tequila", "snaps", "champagne", "cava", "prosecco"]
        random_word = random.choice(random_word_response)
    elif choice == "5":
        try: # try the api to generate a random difficult word
            random_word_response = requests.get("https://random-word-api.herokuapp.com/word")
            random_word = random_word_response.json()[0]
        except: # if api fails, load random difficult word instead
            random_word_response = ["aberration", "cacophony", "ephemeral", "incontrovertible", "lugubrious", "nefarious", "obfuscate", "recalcitrant", "sycophant", "vitriolic"]
            random_word = random.choice(random_word_response)
    else:
        print("Invalid input, try again.")
        return None
    return random_word

def count_characters(s):
    character_counts = {}
    for char in s:
        if char in character_counts:
            character_counts[char] += 1
        else:
            character_counts[char] = 1
    return character_counts

def is_valid_guess(guess):
    return re.match("^[a-zA-Z]$", guess) is not None

def hangman_introduction():
    print(f"\n--- Welcome to Hangman! --- \nYour task is to guess a word generated by the computer.\nFor each attempt you can guess a letter, and the computer will tell you whether the letter exist in the word or not. You have 10 attempts.\nSelect one of the following categories to play:\n")
    print(f"1. Fruits")
    print(f"2. Car brands")
    print(f"3. Countries")
    print(f"4. Alcoholic spirits")
    print(f"5. F**ck it, let's make this as difficult as possible.")
    choice = input("Choose a category (1-5): ")
    return choice

def make_guess():
    guess = input("Guess a letter: ").strip()
    if is_valid_guess(guess):
        print(f"You guessed the letter {guess}...\n")
        return guess
    else:
        print("Invalid guess. Please enter a single alphabetical letter.")
        return None

def display_made_guesses(guessed_letters, guesses_remaining, correct_letters):
    print(f"You have guessed the following letters: {', '.join(guessed_letters)} \n")
    print(f"You have {guesses_remaining} attempt(s) remaining.")
    print(f"These are your correct guesses: {', '.join(correct_letters)}")
    print("___________________________________________________________________________")
    
def play_hangman():
    while True: 
        choice = hangman_introduction()
        random_word = generate_word(choice)
    
        if random_word is not None:
            break
        else:
            print("Please enter a valid choice (1-5).")

    word_length = len(random_word) # length of word as a hint
    correct_letters = set(random_word) # create a list of correct letters in the word
    occurrence = count_characters(random_word) # count number of occurrences of correct letter to provide a hint to user
    guessed_letters = []
    correct_guesses = []
    guesses_remaining = 10

    while True:
        ready_to_play = input("Ready to play? (y/n)\n")
        if ready_to_play.lower() in ("y", "yes", "1", "n", "0", "no"):
            break
        else:
            print("Please enter a valid response (y/n).")

    if ready_to_play.lower() in ("y", "yes", "1"):
        print(f"Great! As a first clue, the length of the word I'm thinking about is... {word_length} letters. What's your first guess?")
        while guesses_remaining > 0:
            if guesses_remaining < 10:
                display_made_guesses(guessed_letters, guesses_remaining, correct_guesses) # skip displaying previous guesses if it's the first guess

            guess = make_guess()
            if guess is None:
                continue
            if guess in guessed_letters:
                print("You've already guessed that letter.")
                continue

            guessed_letters.append(guess)

            if guess in correct_letters:
                print(f"Correct guess! The letter {guess} has {occurrence[guess]} occurance in the word.")
                correct_guesses.append(guess)
            else:
                print(f"WRONG! {guess} is not in the word. {guesses_remaining -1} guesses remaining.")
                guesses_remaining -= 1
            
            if all(letter in guessed_letters for letter in correct_letters):
                print(f"\nCongratulations... You've beaten the machine. The correct word was {random_word}.")
                play_again = input("\nPlay again and try another category? (y/n)\n")
                if play_again.lower() in ("y", "yes", "1"):
                    play_hangman()
                else:
                    print("Come again.")
                break
        else:
            print(f"\nHow does it feel to loose against a machine? The word I was thinking about was {random_word}. Better luck next time.\n")
            play_again = input("\nPlay again and try another category? (y/n)\n")
            if play_again.lower() in ("y", "yes", "1"):
                play_hangman()
            else:
                print("Come again.")

    elif ready_to_play.lower() in ("n", "no", "0"):
        print("No worries. Come back when you dare to play.")


play_hangman()